# Before you start: 
# Setup PAT_GITHUB & ANTHROPIC_API_KEY Secrets
# 
# Permissions for PAT
# - (Orgs Only) Read and Write access to organization private registries
# - Read access to code and metadata
# - Read and Write access to actions, code, deployments, issues, pull requests, and workflows
# 
# Create GitHub PAT (Can be Personal or Org)
# https://github.com/settings/personal-access-tokens/new
# 
# PATs need specific permissions for workflow files. Token errors are often cryptic 403s. Always verify scopes.
# 
# Add new secrets
# https://github.com/ACT-House-Engineering/act-junior-action/settings/secrets/actions/new
# Bleep boop. AI updated: 2025-03-13 00:00:00
name: ðŸ§’ ACT Junior

on:
  issues:
    types: [opened, edited, labeled]
  pull_request:
    types: [edited, labeled]
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  push:
    paths:
      - '.github/workflows/act-junior.yaml'
      - 'tasks/create-poem.md'

# Required permissions for creating PRs from workflows
permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

# Define default environment variables for the workflow
env:
  # Core configuration options - edit these values to customize the action
  ACT_TRIGGER_KEYWORD: '@act-junior'              # Trigger keyword for issues/PRs
  ACT_DEFAULT_MODEL: 'claude-3-5-sonnet-20241022' # Default AI model to use
  ACT_VERIFY_COMMIT_MSG: 'Add new poem from Aider' # Message used to prevent workflow loops
  ACT_TASK_FILE: 'tasks/create-poem.md'           # Task file for AI verification
  ACT_BOT_USERNAME: 'ðŸ§’ ACT Junior'               # Bot username to prevent self-triggering

  # Other environment variables
  # The model to use for Aider - can be overridden via repository secrets
  # See https://aider.chat/docs/config/options.html for available models
  AIDER_MODEL: claude-3-5-sonnet-20241022

# LEARNING: Debug workflows with 'gh run watch' and 'gh run view --log-failed'. Add logs for context.
# Note: This workflow requires a Personal Access Token with 'repo' scope
# stored in the repository secrets as PAT_GITHUB to create pull requests
jobs:
  verify-aider:
    # Only run for push events to this workflow file
    # and avoid running when the commit is already verifying Aider
    # LEARNING: Self-updating systems need safeguards against infinite loops. Always check commit messages and content changes.
    if: >
      github.event_name == 'push' && 
      !contains(github.event.head_commit.message, 'Add new poem from Aider')
    runs-on: ubuntu-latest
    steps:
      # IMPORTANT: Must checkout the repository before using a local action
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_GITHUB }}
          
      # Use our local marketplace action definition
      - name: Run ACT Junior for verification
        id: act-junior
        uses: ./
        with:
          github-token: ${{ secrets.PAT_GITHUB }}
          anthropic-api-key: ${{ secrets.ANTHROPIC_API_KEY }}
          aider-model: ${{ env.AIDER_MODEL }}
          bot-username: "${{ env.ACT_BOT_USERNAME }}"
          task-file: ${{ env.ACT_TASK_FILE }}
      
      - name: Check if poem was created
        if: steps.act-junior.outputs.success == 'true'
        run: |
          # Get current date and time
          CURRENT_DATE=$(date +"%Y-%m-%d")
          CURRENT_TIME=$(date +"%H:%M:%S")
          
          # Commit and push if poem.md exists
          if [ -f "poem.md" ]; then
            echo "Aider successfully created the poem file"
            
            # Commit and push the changes
            git add poem.md
            git commit -m "${{ env.ACT_VERIFY_COMMIT_MSG }} ($CURRENT_DATE $CURRENT_TIME)"
            git push
          else
            echo "Aider didn't create the poem file"
            echo "Ensuring the workflow fails if the AI component fails"
            exit 1
          fi

  solve-issue:
    # Run this job when:
    # - @act-junior appears in issue/PR title, OR
    # - @act-junior appears in issue/PR body, OR
    # - @act-junior or ai-solve label is applied, OR
    # - @act-junior mentioned in a comment (not from the bot itself)
    if: >
      (github.event.action == 'labeled' && (github.event.label.name == 'ai-solve' || github.event.label.name == '@act-junior'))
      ||
      (github.event.action == 'opened' || github.event.action == 'edited') && 
      (
        contains(github.event.issue.title, '@act-junior') || 
        contains(github.event.pull_request.title, '@act-junior') ||
        contains(github.event.issue.body, '@act-junior') ||
        contains(github.event.pull_request.body, '@act-junior') ||
        contains(toJSON(github.event.issue.labels), 'ai-solve') ||
        contains(toJSON(github.event.pull_request.labels), 'ai-solve') ||
        contains(toJSON(github.event.issue.labels), '@act-junior') ||
        contains(toJSON(github.event.pull_request.labels), '@act-junior')
      )
      ||
      ((github.event_name == 'issue_comment' || github.event_name == 'pull_request_review_comment') && 
       contains(github.event.comment.body, '@act-junior') && 
       github.event.comment.user.login != 'github-actions[bot]' && 
       !contains(github.event.comment.body, 'On it! I''m working on this request'))
    runs-on: ubuntu-latest

    steps:
      - name: Debug Trigger Info
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Event action: ${{ github.event.action }}"
          echo "Repository: ${{ github.repository }}"
          echo "Ref: ${{ github.ref }}"
          echo "Has issue context: ${{ github.event.issue != null }}"
          echo "Has PR context: ${{ github.event.pull_request != null }}"
          echo "Has comment context: ${{ github.event.comment != null }}"
          echo "Trigger keyword: ${{ env.ACT_TRIGGER_KEYWORD }}"
          
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure required labels exist
        uses: ./.github/actions/ensure-labels
        with:
          github-token: ${{ secrets.PAT_GITHUB }}
          labels: |
            [
              {"name": "ai-solve", "color": "0E8A16", "description": "Issue to be solved by AI"},
              {"name": "ai-generated", "color": "1D76DB", "description": "PR generated by AI"},
              {"name": "ai-retry-attempt", "color": "FBCA04", "description": "Retry attempt by AI"},
              {"name": "needs-human-attention", "color": "D93F0B", "description": "AI couldn't solve this issue"},
              {"name": "${{ env.ACT_TRIGGER_KEYWORD }}", "color": "0E8A16", "description": "Issue to be solved by AI Junior"}
            ]

      # Use our local marketplace action definition
      - name: Run ACT Junior for issue solving
        id: act-junior
        uses: ./
        with:
          github-token: ${{ secrets.PAT_GITHUB }}
          anthropic-api-key: ${{ secrets.ANTHROPIC_API_KEY }}
          trigger-keyword: '${{ env.ACT_TRIGGER_KEYWORD }}'
          aider-model: ${{ env.AIDER_MODEL }}
          bot-username: "${{ env.ACT_BOT_USERNAME }}"
          git-email: "beta@act.house" 
